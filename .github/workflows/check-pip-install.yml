name: Check pip install

on:
  push:
    paths:
      - poetry.lock
      - pyproject.toml
      - .github/workflows/check-pip-install.yml
  pull_request:
    paths:
      - poetry.lock
      - pyproject.toml
      - .github/workflows/check-pip-install.yml

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check_pip_install:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2
        id: install_python
        with:
          python-version: "3.9"

      - name: install system dependencies
        run: sudo apt-get install -y -q build-essential cmake krb5-config python-dev libkrb5-dev libboost-all-dev graphviz

      - name: install poetry
        run: pip install poetry

      - name: generate requirements.txt
        run: poetry export --dev --extras all --without-hashes > requirements.txt

      - uses: syphar/restore-virtualenv@v1
        with:
          requirement_files: requirements.txt
          custom_cache_key_element: check-setuptools-install-${{ steps.install_python.outputs.python-version }}

      - uses: syphar/restore-pip-download-cache@v1
        with:
          requirement_files: requirements.txt
          custom_cache_key_element: check-setuptools-install-${{ steps.install_python.outputs.python-version }}

      - name: install using requirements.txt
        run: pip install -r requirements.txt

      - name: install ibis in development mode
        run: pip install -e .

      - name: show python
        run: |
          which python
          echo "$VIRTUAL_ENV/bin/python"

      - name: check import
        run: $VIRTUAL_ENV/bin/python -c 'import ibis'

      - name: check import above ibis
        run: |
          set -euo pipefail

          cd ../..
          $VIRTUAL_ENV/bin/python -c 'import ibis'

      - name: run simple tests
        run: $VIRTUAL_ENV/bin/python -m pytest ibis/tests --numprocesses auto

  check_poetry_lock:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: install poetry
        run: pip install poetry

      - name: run poetry lock
        run: poetry lock --no-update

      - name: check whether poetry lockfile needs to be updated
        run: git diff --exit-code poetry.lock
